/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import javax.swing.JButton;
import model.ViewListener;

/**
 *
 * @author Adam
 */
public class LocomotiveSelector extends javax.swing.JFrame {

    private ViewListener model;
    private TrainControlUI parent;
    private static final int PADDING = 2;
        
    /**
     * Creates new form LocomotiveSelector
     * @param model
     * @param ui
     */
    public LocomotiveSelector(ViewListener model, TrainControlUI ui)
    {
        this.model = model;
        this.parent = ui;

        initComponents();
        
        this.setAlwaysOnTop(true);
        
        refreshLocSelectorList();
        
        pack();
     
        setVisible(true);
    }

    public void refreshLocSelectorList()
    {
        this.MainLocList.removeAll();
        
        this.MainLocList.setLayout(new FlowLayout(FlowLayout.LEFT, PADDING, PADDING) {
            /*public Dimension preferredLayoutSize(Container target) {
                Dimension sd=super.preferredLayoutSize(target);

                sd.width=Math.min(200, sd.width);

                return sd;
            }*/
        });
                
        for (String s : model.getLocList())
        {
            LocomotiveSelectorItem loc = new LocomotiveSelectorItem(model.getLocByName(s), parent);
         
            this.MainLocList.add(loc);
            loc.setVisible(true);
        }
        
        this.LocFilterBox.setText("");
        filterLocList();
    }
    
    private void filterLocList()
    {
        String filter = this.LocFilterBox.getText().toLowerCase();
        
        for (Component b : this.MainLocList.getComponents())
        {
            LocomotiveSelectorItem bb = (LocomotiveSelectorItem) b;
            if ("".equals(filter) || bb.getText().toLowerCase().contains(filter))
            {
                b.setVisible(true);
            }
            else
            {
                b.setVisible(false);
            }
        }
        
        updateScrollArea();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        locListLabel = new javax.swing.JLabel();
        LocFilterBox = new javax.swing.JTextField();
        renameLabel = new javax.swing.JLabel();
        LocScroller = new javax.swing.JScrollPane();
        MainLocList = new javax.swing.JPanel();

        setTitle("Locomotive Selector");
        setAutoRequestFocus(false);
        setMaximumSize(new java.awt.Dimension(800, 4000));
        setMinimumSize(new java.awt.Dimension(400, 550));
        setPreferredSize(new java.awt.Dimension(700, 650));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        locListLabel.setForeground(new java.awt.Color(0, 0, 155));
        locListLabel.setText("Assign Locomotive to Selected Button:");

        LocFilterBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LocFilterBoxActionPerformed(evt);
            }
        });
        LocFilterBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                LocFilterBoxKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                LocFilterBoxKeyTyped(evt);
            }
        });

        renameLabel.setForeground(new java.awt.Color(0, 0, 155));
        renameLabel.setText("Filter List:");

        LocScroller.setHorizontalScrollBar(null);
        LocScroller.setMaximumSize(null);
        LocScroller.setMinimumSize(new java.awt.Dimension(670, 500));
        LocScroller.setPreferredSize(new java.awt.Dimension(670, 1000));

        MainLocList.setBackground(new java.awt.Color(255, 255, 255));
        MainLocList.setMaximumSize(null);
        MainLocList.setMinimumSize(new java.awt.Dimension(670, 600));
        MainLocList.setPreferredSize(new java.awt.Dimension(670, 600));
        MainLocList.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                MainLocListComponentResized(evt);
            }
        });
        MainLocList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                MainLocListKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout MainLocListLayout = new javax.swing.GroupLayout(MainLocList);
        MainLocList.setLayout(MainLocListLayout);
        MainLocListLayout.setHorizontalGroup(
            MainLocListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 670, Short.MAX_VALUE)
        );
        MainLocListLayout.setVerticalGroup(
            MainLocListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );

        LocScroller.setViewportView(MainLocList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LocScroller, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(locListLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(renameLabel)
                                .addGap(15, 15, 15)
                                .addComponent(LocFilterBox, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(locListLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LocScroller, javax.swing.GroupLayout.DEFAULT_SIZE, 554, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LocFilterBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(renameLabel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        parent.childWindowKeyEvent(evt);
    }//GEN-LAST:event_formKeyPressed

    private void MainLocListKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MainLocListKeyPressed
        parent.childWindowKeyEvent(evt);
    }//GEN-LAST:event_MainLocListKeyPressed

    private void LocFilterBoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LocFilterBoxKeyReleased
        filterLocList();
    }//GEN-LAST:event_LocFilterBoxKeyReleased

    private void LocFilterBoxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LocFilterBoxKeyTyped
        filterLocList();
    }//GEN-LAST:event_LocFilterBoxKeyTyped

    private void LocFilterBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LocFilterBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LocFilterBoxActionPerformed

    private void MainLocListComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_MainLocListComponentResized
        
       
    }//GEN-LAST:event_MainLocListComponentResized

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        updateScrollArea();
    }//GEN-LAST:event_formComponentResized

    private void updateScrollArea()
    {
        if (this.MainLocList.getComponentCount() > 0)
        {            
            Integer cols = this.LocScroller.getWidth() / this.MainLocList.getComponent(0).getWidth();
            
            System.out.println(cols);
            
            Integer itemH = this.MainLocList.getComponent(0).getHeight();
            Integer totalItems = this.MainLocList.getComponentCount();
            
            
            Integer rows = (int) Math.ceil((double) totalItems / (double) cols) ;
            
            System.out.println(rows);
            
            this.MainLocList.setPreferredSize(new Dimension(this.getWidth(), ( rows * ( itemH + PADDING) ) + itemH * 2));
        }   
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField LocFilterBox;
    private javax.swing.JScrollPane LocScroller;
    private javax.swing.JPanel MainLocList;
    private javax.swing.JLabel locListLabel;
    private javax.swing.JLabel renameLabel;
    // End of variables declaration//GEN-END:variables
}
